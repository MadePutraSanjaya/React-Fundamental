{"ast":null,"code":"// ===== Lifecycle 1 ===== \n// import React, { Component } from 'react'\n// import Sublifestate from \"./sublifecycle\"\n// export default class lifecycle extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//        makanan: 'bakso',\n//        data: {},\n//        halaman: false\n//     }\n//   }\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/todos/1')\n//   .then(response => response.json())\n//   .then(json => {\n//     this.setState({\n//       data: json\n//     })\n//   })\n//   }\n//   changeFood(value) {\n//     this.setState({\n//       makanan: value\n//     })\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h2>Belajar lifecycle</h2>\n//         <h2>{this.state.makanan}</h2>\n//         <p>{ this.state.data.title }</p>\n//         {this.state.halaman && <Sublifestate changeFood={(value) => this.changeFood(value)} />}\n//         <button onClick={() => this.setState({halaman: !this.state.halaman})}>Tekan</button>\n//       </div>\n//     )\n//   }\n// }\n// ===== Lifecycle 2 ===== \n// import React, { Component } from 'react'\n// export default class lifecycle extends Component {\n//   constructor(props) {\n//     console.log('constructor');\n//     super(props)\n//     this.state = {\n//        count: 1,\n//     }\n//   }\n//   static getDerivedStateFromProps(props, state){\n//     console.log('getDerivedStateFromProps');\n//     return null\n//   }\n//   componentDidMount() {\n//     console.log(\"componentDidMount\");\n//     setTimeout(() => {\n//       this.setState({\n//         count: 2\n//       })\n//     }, 3000)\n//   }\n//   shouldComponentUpdate(nextProps, nextState) {\n//     console.group('shouldComponentUpdate');\n//     console.log(\"nextState\", nextState);\n//     console.log(\"thisState\", this.state);\n//     if (nextState.count >= 10) {\n//       return false;\n//     } \n//     console.groupEnd()\n//     return true;\n//   }\n//   getSnapshotBeforeUpdate(prevProps, prevState){\n//     console.log('getSnapshotBeforeUpdate');\n//     return null\n//   }\n//   changeEvent = () => {\n//     this.setState({\n//       count : this.state.count + 1\n//     })\n//   }\n//   componentDidUpdate(prevProps, prevState, snapshot) {\n//     console.log('componentDidUpdate');\n//   }\n//   render() {\n//     console.log('render');\n//     return (\n//       <div>\n//         <button onClick={this.changeEvent}>Count: { this.state.count }</button>\n//       </div>\n//     )\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/macintosh/Vscode/React/fundamental-state-props/src/fundamental_basic/lifecycle/lifecycle.js"],"sourcesContent":["// ===== Lifecycle 1 ===== \n\n// import React, { Component } from 'react'\n// import Sublifestate from \"./sublifecycle\"\n// export default class lifecycle extends Component {\n//   constructor(props) {\n//     super(props)\n  \n//     this.state = {\n//        makanan: 'bakso',\n//        data: {},\n//        halaman: false\n//     }\n//   }\n\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/todos/1')\n//   .then(response => response.json())\n//   .then(json => {\n//     this.setState({\n//       data: json\n//     })\n//   })\n//   }\n\n//   changeFood(value) {\n//     this.setState({\n//       makanan: value\n//     })\n//   }\n  \n//   render() {\n//     return (\n//       <div>\n//         <h2>Belajar lifecycle</h2>\n//         <h2>{this.state.makanan}</h2>\n//         <p>{ this.state.data.title }</p>\n\n//         {this.state.halaman && <Sublifestate changeFood={(value) => this.changeFood(value)} />}\n//         <button onClick={() => this.setState({halaman: !this.state.halaman})}>Tekan</button>\n//       </div>\n//     )\n//   }\n// }\n\n// ===== Lifecycle 2 ===== \n\n// import React, { Component } from 'react'\n\n// export default class lifecycle extends Component {\n//   constructor(props) {\n//     console.log('constructor');\n//     super(props)\n  \n//     this.state = {\n//        count: 1,\n//     }\n//   }\n\n//   static getDerivedStateFromProps(props, state){\n//     console.log('getDerivedStateFromProps');\n//     return null\n//   }\n\n//   componentDidMount() {\n//     console.log(\"componentDidMount\");\n//     setTimeout(() => {\n//       this.setState({\n//         count: 2\n//       })\n//     }, 3000)\n//   }\n\n  \n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     console.group('shouldComponentUpdate');\n//     console.log(\"nextState\", nextState);\n//     console.log(\"thisState\", this.state);\n\n//     if (nextState.count >= 10) {\n//       return false;\n//     } \n//     console.groupEnd()\n\n//     return true;\n    \n//   }\n\n//   getSnapshotBeforeUpdate(prevProps, prevState){\n//     console.log('getSnapshotBeforeUpdate');\n//     return null\n    \n//   }\n\n//   changeEvent = () => {\n//     this.setState({\n//       count : this.state.count + 1\n//     })\n//   }\n\n//   componentDidUpdate(prevProps, prevState, snapshot) {\n//     console.log('componentDidUpdate');\n//   }\n\n//   render() {\n//     console.log('render');\n//     return (\n//       <div>\n//         <button onClick={this.changeEvent}>Count: { this.state.count }</button>\n//       </div>\n//     )\n//   }\n// }\n\n\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}